server:
  port: 9000

spring:
  application:
    name: "notification"
  mail:
    host: smtp.gmail.com
    port: 587
    username: your-email@gmail.com
    password: your-email-password
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  datasource:
    url: jdbc:postgresql://localhost:5435/notification-db
    username: postgres
    password: password
  config:
    import: "optional:configserver:http://localhost:8071/"
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    stream:
      function:
        definition: sendEmail
      bindings:
        sendEmail-in-0:
          destination: task-notification-topic
          group: notification-service-group
      kafka:
        binder:
          brokers:
            - localhost:9092
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  kafka:
    bootstrap-servers: localhost:9092
feign:
  client:
    config:
      users:
        connect-timeout: 3000
        read-timeout: 3000
        logger-level: DEBUG

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
logging:
  level:
    root: debug
    com.taskflow.notification: debug

